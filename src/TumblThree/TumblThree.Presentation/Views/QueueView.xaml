<UserControl x:Class="TumblThree.Presentation.Views.QueueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:p="clr-namespace:TumblThree.Presentation.Properties"
             xmlns:ctrl="clr-namespace:TumblThree.Presentation.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="clr-namespace:TumblThree.Presentation.DesignData"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance dd:SampleQueueViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="500" d:DesignWidth="300" Background="{StaticResource DefaultBackground}">
    <UserControl.InputBindings>
    </UserControl.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ListBox x:Name="queueListBox" Grid.Row="0" ItemsSource="{Binding QueueManager.Items}" SelectedItem="{Binding SelectedQueueItem}" SelectionMode="Extended" HorizontalContentAlignment="Stretch"
                 BorderThickness="0" Background="{StaticResource DefaultBackground}" AllowDrop="True"
                 ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ctrl:SelectionBehavior.SyncSelectedItems="{Binding SelectedQueueItems}">
            <ListBox.InputBindings>
                <KeyBinding Command="{Binding RemoveSelectedCommand}" Key="Delete"/>
            </ListBox.InputBindings>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="Padding" Value="0,3,4,2"/>
                    <Setter Property="AllowDrop" Value="True"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Command="{Binding RemoveSelectedCommand}" Header="{x:Static p:Resources.RemoveSelected}" InputGestureText="{x:Static p:Resources.Delete}"/>
                                <Separator/>
                                <MenuItem Command="{Binding ShowBlogDetailsCommand}" Header="{x:Static p:Resources.ShowDetails}"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                    <EventSetter Event="ContextMenuOpening" Handler="ListBoxItemContextMenuOpening"/>
                    <!-- <EventSetter Event="MouseDoubleClick" Handler="ListBoxItemMouseDoubleClick"/> -->
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="65"/>
                            <ColumnDefinition Width="3"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1"/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition Height="2"/>
                        </Grid.RowDefinitions>

                        <Border Background="{StaticResource ActiveForeground}" Width="3" HorizontalAlignment="Left" Grid.RowSpan="4">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource IsQueueItemCrawlingMultiConverter}">
                                                    <Binding Path="DataContext.SelectionService.ActiveItems" ElementName="queueListBox"/>
                                                    <Binding Path="." />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <ctrl:SearchableTextBlock Text="{Binding Blog.Name}" 
                                FontWeight="SemiBold" TextTrimming="CharacterEllipsis" Grid.Row="1" Grid.Column="1" ctrl:ToolTipBehavior.AutoToolTip="True"
                                Visibility="{Binding Blog.LoadError, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=invert}">
                            <ctrl:SearchableTextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource IsQueueItemCrawlingMultiConverter}">
                                                    <Binding Path="DataContext.SelectionService.ActiveItems" ElementName="queueListBox"/>
                                                    <Binding Path="." />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <DataTrigger.Setters>
                                                <Setter Property="Foreground" Value="{StaticResource ActiveForeground}"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ctrl:SearchableTextBlock.Style>
                        </ctrl:SearchableTextBlock>
                        <TextBlock Text="{x:Static p:Resources.Error}" Grid.Row="1" Grid.Column="1" FontWeight="SemiBold" Foreground="{StaticResource ErrorForeground}"
                                   Visibility="{Binding Blog.LoadError, Converter={StaticResource NullToVisibilityConverter}}">
                            <TextBlock.ToolTip>
                                <ctrl:SuperToolTip Title="{x:Static p:Resources.InternalErrorDescription}" Description="{Binding Blog.LoadError.Message}"/>
                            </TextBlock.ToolTip>
                        </TextBlock>

                        <ctrl:SearchableTextBlock
                            TextTrimming="CharacterEllipsis" Grid.Row="2" Grid.Column="1" ctrl:ToolTipBehavior.AutoToolTip="True">
                            <ctrl:SearchableTextBlock.Text>
                                <MultiBinding Converter="{StaticResource BlogQueueProgressConverter}">
                                    <Binding Path="Progress"/>
                                </MultiBinding>
                            </ctrl:SearchableTextBlock.Text>
                        </ctrl:SearchableTextBlock>

                        <ctrl:Rating Value="{Binding Blog.Rating, Converter={StaticResource RatingToStarsConverter}}" Height="11"
                                   HorizontalAlignment="Right" Grid.Row="1" Grid.Column="2"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button x:Name="statusBarButton" Grid.Row="2" Click="StatusBarButtonClick" Height="21" Background="{StaticResource DarkBackground}" BorderThickness="0" HorizontalContentAlignment="Stretch">
            <Grid Margin="7,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding QueueManager.Items.Count, Converter={StaticResource ItemsCountConverter}}" Grid.Column="0"/>

                <TextBlock Text="&#xE10C;" FontFamily="Segoe UI Symbol" FontSize="10" VerticalAlignment="Center" Grid.Column="1"/>

                <TextBlock Grid.Column="2" HorizontalAlignment="Right">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource TotalImageConverter}">
                            <Binding Path="QueueManager.QueueTotalImageCount"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </Button>
        <ctrl:Flyout x:Name="menuPopup" PlacementTarget="{Binding ElementName=statusBarButton}" Placement="Top">
            <Border BorderBrush="White" BorderThickness="0,1" Background="{StaticResource DarkBackground}">
                <Grid Margin="5,10,5,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Button Command="{Binding OpenQueueCommand}" Content="&#xE1A5;" Style="{StaticResource IconButtonStyle}" Grid.Row="0" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OpenQueue}" Style="{StaticResource AppBarTextBlockStyle}" Grid.Row="1" Grid.Column="0"/>

                    <Button Command="{Binding SaveQueueCommand}" Content="&#xE105;" Style="{StaticResource IconButtonStyle}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="{x:Static p:Resources.SaveQueue}" Style="{StaticResource AppBarTextBlockStyle}" Grid.Row="1" Grid.Column="1"/>

                    <Button Command="{Binding ClearQueueCommand}" Content="&#xE106;" Style="{StaticResource IconButtonStyle}" Grid.Row="0" Grid.Column="2"/>
                    <TextBlock Text="{x:Static p:Resources.ClearQueue}" Style="{StaticResource AppBarTextBlockStyle}" Grid.Row="1" Grid.Column="2"/>
                </Grid>
            </Border>
        </ctrl:Flyout>
    </Grid>
</UserControl>
